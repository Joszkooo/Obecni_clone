// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Obecni_clone.Server.Data;

#nullable disable

namespace Obecni_clone.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240711145007_ForeginKeysCommit")]
    partial class ForeginKeysCommit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Obecni_clone.Server.Models.Klienci", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kod_pocztowy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Miasto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naziwsko")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Klienci");
                });

            modelBuilder.Entity("Obecni_clone.Server.Models.ListaHD", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Dzien")
                        .HasColumnType("date");

                    b.Property<int>("PracownikId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PracownikId")
                        .IsUnique();

                    b.ToTable("HDs");
                });

            modelBuilder.Entity("Obecni_clone.Server.Models.Pracownik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly?>("DataZatrudnieniaDo")
                        .HasColumnType("date");

                    b.Property<DateOnly>("DataZatrudnieniaOd")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Moderator")
                        .HasColumnType("bit");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pseudonim")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pracownicy");
                });

            modelBuilder.Entity("Obecni_clone.Server.Models.Rejestr", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PracownikId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Status2")
                        .HasColumnType("int");

                    b.Property<DateTime>("Wejscie")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Wyjscie")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PracownikId")
                        .IsUnique();

                    b.ToTable("Rejestry");
                });

            modelBuilder.Entity("Obecni_clone.Server.Models.Urlop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DlugoscUrlopu")
                        .HasColumnType("int");

                    b.Property<DateTime>("Do_Kiedy")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Od_Kiedy")
                        .HasColumnType("datetime2");

                    b.Property<int>("PracownikId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PracownikId");

                    b.ToTable("Urlopy");
                });

            modelBuilder.Entity("Obecni_clone.Server.Models.WyjazdyDoKlientow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataWyjazdu")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("GodzinaDo")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("GodzinaOd")
                        .HasColumnType("time");

                    b.Property<int>("KlienciId")
                        .HasColumnType("int");

                    b.Property<int>("PracownikId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KlienciId");

                    b.HasIndex("PracownikId");

                    b.ToTable("WyjazdyKlienci");
                });

            modelBuilder.Entity("Obecni_clone.Server.Models.ListaHD", b =>
                {
                    b.HasOne("Obecni_clone.Server.Models.Pracownik", "pracownik")
                        .WithOne("listaHD")
                        .HasForeignKey("Obecni_clone.Server.Models.ListaHD", "PracownikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("pracownik");
                });

            modelBuilder.Entity("Obecni_clone.Server.Models.Rejestr", b =>
                {
                    b.HasOne("Obecni_clone.Server.Models.Pracownik", "pracownik")
                        .WithOne("rejestr")
                        .HasForeignKey("Obecni_clone.Server.Models.Rejestr", "PracownikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("pracownik");
                });

            modelBuilder.Entity("Obecni_clone.Server.Models.Urlop", b =>
                {
                    b.HasOne("Obecni_clone.Server.Models.Pracownik", "pracownik")
                        .WithMany()
                        .HasForeignKey("PracownikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("pracownik");
                });

            modelBuilder.Entity("Obecni_clone.Server.Models.WyjazdyDoKlientow", b =>
                {
                    b.HasOne("Obecni_clone.Server.Models.Klienci", "klienci")
                        .WithMany()
                        .HasForeignKey("KlienciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Obecni_clone.Server.Models.Pracownik", "pracownik")
                        .WithMany()
                        .HasForeignKey("PracownikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("klienci");

                    b.Navigation("pracownik");
                });

            modelBuilder.Entity("Obecni_clone.Server.Models.Pracownik", b =>
                {
                    b.Navigation("listaHD")
                        .IsRequired();

                    b.Navigation("rejestr")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
